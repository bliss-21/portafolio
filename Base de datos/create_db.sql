
CREATE TABLE auth_group (
    id    NUMBER(11)
        GENERATED BY DEFAULT ON NULL AS IDENTITY ( START WITH 1 CACHE 20 )
    NOT NULL,
    name  NVARCHAR2(150)
)
PCTFREE 10 PCTUSED 40 TABLESPACE users LOGGING
    STORAGE ( PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT )
NO INMEMORY;

ALTER TABLE auth_group ADD CONSTRAINT auth_group_pk PRIMARY KEY ( id );

ALTER TABLE auth_group ADD CONSTRAINT auth_group_name_un UNIQUE ( name );

CREATE TABLE auth_group_permissions (
    id             NUMBER(11)
        GENERATED BY DEFAULT ON NULL AS IDENTITY ( START WITH 1 CACHE 20 )
    NOT NULL,
    group_id       NUMBER(11) NOT NULL,
    permission_id  NUMBER(11) NOT NULL
)
PCTFREE 10 PCTUSED 40 TABLESPACE users LOGGING
    STORAGE ( PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT )
NO INMEMORY;

CREATE UNIQUE INDEX auth_grou_group_id__0cd325b0_u ON
    auth_group_permissions (
        group_id
    ASC,
        permission_id
    ASC )
        TABLESPACE users PCTFREE 10
            STORAGE ( PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT )
        LOGGING;

CREATE INDEX auth_group_group_id_b120cbf9 ON
    auth_group_permissions (
        group_id
    ASC )
        TABLESPACE users PCTFREE 10
            STORAGE ( PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT )
        LOGGING;

CREATE INDEX auth_group_permission_84c5c92e ON
    auth_group_permissions (
        permission_id
    ASC )
        TABLESPACE users PCTFREE 10
            STORAGE ( PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT )
        LOGGING;

ALTER TABLE auth_group_permissions ADD CONSTRAINT auth_group_permissions_pk PRIMARY KEY ( id );

ALTER TABLE auth_group_permissions
    ADD CONSTRAINT auth_grou_group_id__0cd325b0_u UNIQUE ( group_id,
                                                           permission_id )
        USING INDEX auth_grou_group_id__0cd325b0_u;

CREATE TABLE auth_permission (
    id               NUMBER(11)
        GENERATED BY DEFAULT ON NULL AS IDENTITY ( START WITH 1 CACHE 20 )
    NOT NULL,
    name             NVARCHAR2(255),
    content_type_id  NUMBER(11) NOT NULL,
    codename         NVARCHAR2(100)
)
PCTFREE 10 PCTUSED 40 TABLESPACE users LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL
    DEFAULT )
NO INMEMORY;

CREATE UNIQUE INDEX auth_perm_content_t_01ab375a_u ON
    auth_permission (
        content_type_id
    ASC,
        codename
    ASC )
        TABLESPACE users PCTFREE 10
            STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL
            DEFAULT )
        LOGGING;

CREATE INDEX auth_permi_content_ty_2f476e4b ON
    auth_permission (
        content_type_id
    ASC )
        TABLESPACE users PCTFREE 10
            STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL
            DEFAULT )
        LOGGING;

ALTER TABLE auth_permission ADD CONSTRAINT auth_permission_pk PRIMARY KEY ( id );

ALTER TABLE auth_permission
    ADD CONSTRAINT auth_perm_content_t_01ab375a_u UNIQUE ( content_type_id,
                                                           codename )
        USING INDEX auth_perm_content_t_01ab375a_u;

CREATE TABLE auth_user (
    id            NUMBER(11)
        GENERATED BY DEFAULT ON NULL AS IDENTITY ( START WITH 1 CACHE 20 )
    NOT NULL,
    password      NVARCHAR2(128),
    last_login    TIMESTAMP,
    is_superuser  NUMBER(1) NOT NULL,
    username      NVARCHAR2(150),
    first_name    NVARCHAR2(150),
    last_name     NVARCHAR2(150),
    email         NVARCHAR2(254),
    is_staff      NUMBER(1) NOT NULL,
    is_active     NUMBER(1) NOT NULL,
    date_joined   TIMESTAMP NOT NULL
)
PCTFREE 10 PCTUSED 40 TABLESPACE users LOGGING
    STORAGE ( PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT )
NO INMEMORY;

ALTER TABLE auth_user
    ADD CHECK ( "IS_SUPERUSER" IN ( 0, 1 ) );

ALTER TABLE auth_user
    ADD CHECK ( "IS_STAFF" IN ( 0, 1 ) );

ALTER TABLE auth_user
    ADD CHECK ( "IS_ACTIVE" IN ( 0, 1 ) );

ALTER TABLE auth_user ADD CONSTRAINT auth_user_pk PRIMARY KEY ( id );

ALTER TABLE auth_user ADD CONSTRAINT auth_user_username_un UNIQUE ( username );

CREATE TABLE auth_user_groups (
    id        NUMBER(11)
        GENERATED BY DEFAULT ON NULL AS IDENTITY ( START WITH 1 CACHE 20 )
    NOT NULL,
    user_id   NUMBER NOT NULL,
    group_id  NUMBER(11) NOT NULL
)
PCTFREE 10 PCTUSED 40 TABLESPACE users LOGGING
    STORAGE ( PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT )
NO INMEMORY;

CREATE INDEX auth_user__group_id_97559544 ON
    auth_user_groups (
        group_id
    ASC )
        TABLESPACE users PCTFREE 10
            STORAGE ( PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT )
        LOGGING;

CREATE UNIQUE INDEX auth_user_user_id_g_94350c0c_u ON
    auth_user_groups (
        user_id
    ASC,
        group_id
    ASC )
        TABLESPACE users PCTFREE 10
            STORAGE ( PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT )
        LOGGING;

CREATE INDEX auth_user__user_id_6a12ed8b ON
    auth_user_groups (
        user_id
    ASC )
        TABLESPACE users PCTFREE 10
            STORAGE ( PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT )
        LOGGING;

ALTER TABLE auth_user_groups ADD CONSTRAINT auth_user_groups_pk PRIMARY KEY ( id );

ALTER TABLE auth_user_groups
    ADD CONSTRAINT auth_user_user_id_g_94350c0c_u UNIQUE ( user_id,
                                                           group_id )
        USING INDEX auth_user_user_id_g_94350c0c_u;

CREATE TABLE auth_user_user_permissions (
    id             NUMBER(11)
        GENERATED BY DEFAULT ON NULL AS IDENTITY ( START WITH 1 CACHE 20 )
    NOT NULL,
    user_id        NUMBER NOT NULL,
    permission_id  NUMBER(11) NOT NULL
)
PCTFREE 10 PCTUSED 40 TABLESPACE users LOGGING
    STORAGE ( PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT )
NO INMEMORY;

CREATE INDEX auth_user__permission_1fbb5f2c ON
    auth_user_user_permissions (
        permission_id
    ASC )
        TABLESPACE users PCTFREE 10
            STORAGE ( PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT )
        LOGGING;

CREATE INDEX auth_user__user_id_a95ead1b ON
    auth_user_user_permissions (
        user_id
    ASC )
        TABLESPACE users PCTFREE 10
            STORAGE ( PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT )
        LOGGING;

CREATE UNIQUE INDEX auth_user_user_id_p_14a6b632_u ON
    auth_user_user_permissions (
        user_id
    ASC,
        permission_id
    ASC )
        TABLESPACE users PCTFREE 10
            STORAGE ( PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT )
        LOGGING;

ALTER TABLE auth_user_user_permissions ADD CONSTRAINT auth_user_user_permissions_pk PRIMARY KEY ( id );

ALTER TABLE auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_id_p_14a6b632_u UNIQUE ( user_id,
                                                           permission_id )
        USING INDEX auth_user_user_id_p_14a6b632_u;

CREATE TABLE django_admin_log (
    id               NUMBER(11)
        GENERATED BY DEFAULT ON NULL AS IDENTITY ( START WITH 1 CACHE 20 )
    NOT NULL,
    action_time      TIMESTAMP NOT NULL,
    object_id        NCLOB,
    object_repr      NVARCHAR2(200),
    action_flag      NUMBER(11) NOT NULL,
    change_message   NCLOB,
    content_type_id  NUMBER(11),
    user_id          NUMBER NOT NULL
)
PCTFREE 10 PCTUSED 40 TABLESPACE users LOGGING
    STORAGE ( PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT )
NO INMEMORY
    LOB ( object_id ) STORE AS SECUREFILE (
        TABLESPACE users
        STORAGE ( PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 BUFFER_POOL DEFAULT )
        CHUNK 8192
        RETENTION
        ENABLE STORAGE IN ROW
        NOCACHE LOGGING
    )
    LOB ( change_message ) STORE AS SECUREFILE (
        TABLESPACE users
        STORAGE ( PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 BUFFER_POOL DEFAULT )
        CHUNK 8192
        RETENTION
        ENABLE STORAGE IN ROW
        NOCACHE LOGGING
    );

ALTER TABLE django_admin_log ADD CHECK ( "ACTION_FLAG" >= 0 );

CREATE INDEX django_adm_content_ty_c4bce8eb ON
    django_admin_log (
        content_type_id
    ASC )
        TABLESPACE users PCTFREE 10
            STORAGE ( PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT )
        LOGGING;

CREATE INDEX django_adm_user_id_c564eba6 ON
    django_admin_log (
        user_id
    ASC )
        TABLESPACE users PCTFREE 10
            STORAGE ( PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT )
        LOGGING;

ALTER TABLE django_admin_log ADD CONSTRAINT django_admin_log_pk PRIMARY KEY ( id );

CREATE TABLE django_content_type (
    id         NUMBER(11)
        GENERATED BY DEFAULT ON NULL AS IDENTITY ( START WITH 1 CACHE 20 )
    NOT NULL,
    app_label  NVARCHAR2(100),
    model      NVARCHAR2(100)
)
PCTFREE 10 PCTUSED 40 TABLESPACE users LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL
    DEFAULT )
NO INMEMORY;

CREATE UNIQUE INDEX django_co_app_label_76bd3d3b_u ON
    django_content_type (
        app_label
    ASC,
        model
    ASC )
        TABLESPACE users PCTFREE 10
            STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL
            DEFAULT )
        LOGGING;

ALTER TABLE django_content_type ADD CONSTRAINT django_content_type_pk PRIMARY KEY ( id );

ALTER TABLE django_content_type
    ADD CONSTRAINT django_co_app_label_76bd3d3b_u UNIQUE ( app_label,
                                                           model )
        USING INDEX django_co_app_label_76bd3d3b_u;

CREATE TABLE django_migrations (
    id       NUMBER(11)
        GENERATED BY DEFAULT ON NULL AS IDENTITY ( START WITH 1 CACHE 20 )
    NOT NULL,
    app      NVARCHAR2(255),
    name     NVARCHAR2(255),
    applied  TIMESTAMP NOT NULL
)
PCTFREE 10 PCTUSED 40 TABLESPACE users LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL
    DEFAULT )
NO INMEMORY;

ALTER TABLE django_migrations ADD CONSTRAINT django_migrations_pk PRIMARY KEY ( id );

CREATE TABLE django_session (
    session_key   NVARCHAR2(40) NOT NULL,
    session_data  NCLOB,
    expire_date   TIMESTAMP NOT NULL
)
PCTFREE 10 PCTUSED 40 TABLESPACE users LOGGING
    STORAGE ( PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT )
NO INMEMORY
    LOB ( session_data ) STORE AS SECUREFILE (
        TABLESPACE users
        STORAGE ( PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 BUFFER_POOL DEFAULT )
        CHUNK 8192
        RETENTION
        ENABLE STORAGE IN ROW
        NOCACHE LOGGING
    );

CREATE INDEX django_ses_expire_dat_a5c62663 ON
    django_session (
        expire_date
    ASC )
        TABLESPACE users PCTFREE 10
            STORAGE ( PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT )
        LOGGING;

ALTER TABLE django_session ADD CONSTRAINT django_session_pk PRIMARY KEY ( session_key );

ALTER TABLE auth_group_permissions
    ADD CONSTRAINT auth_grou_group_id_b120cbf9_f FOREIGN KEY ( group_id )
        REFERENCES auth_group ( id )
    DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE auth_group_permissions
    ADD CONSTRAINT auth_grou_permissio_84c5c92e_f FOREIGN KEY ( permission_id )
        REFERENCES auth_permission ( id )
    DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE auth_permission
    ADD CONSTRAINT auth_perm_content_t_2f476e4b_f FOREIGN KEY ( content_type_id )
        REFERENCES django_content_type ( id )
    DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE auth_user_groups
    ADD CONSTRAINT auth_user_group_id_97559544_f FOREIGN KEY ( group_id )
        REFERENCES auth_group ( id )
    DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE auth_user_user_permissions
    ADD CONSTRAINT auth_user_permissio_1fbb5f2c_f FOREIGN KEY ( permission_id )
        REFERENCES auth_permission ( id )
    DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE auth_user_groups
    ADD CONSTRAINT auth_user_user_id_6a12ed8b_f FOREIGN KEY ( user_id )
        REFERENCES auth_user ( id )
    DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_id_a95ead1b_f FOREIGN KEY ( user_id )
        REFERENCES auth_user ( id )
    DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE django_admin_log
    ADD CONSTRAINT django_ad_content_t_c4bce8eb_f FOREIGN KEY ( content_type_id )
        REFERENCES django_content_type ( id )
    DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE django_admin_log
    ADD CONSTRAINT django_ad_user_id_c564eba6_f FOREIGN KEY ( user_id )
        REFERENCES auth_user ( id )
    DEFERRABLE INITIALLY DEFERRED;



CREATE TABLE calidad (
    id_calidad  NUMBER(1) GENERATED BY DEFAULT ON NULL AS IDENTITY NOT NULL,
    nombre      VARCHAR2(20 CHAR) NOT NULL
);

COMMENT ON COLUMN calidad.id_calidad IS
    'Clave principal para las filas de CALIDAD.';

COMMENT ON COLUMN calidad.nombre IS
    'Descripci�n de la CALIDAD.';

ALTER TABLE calidad ADD CONSTRAINT calidad_pk PRIMARY KEY ( id_calidad );

CREATE TABLE cargo (
    id_cargo  NUMBER(3) GENERATED BY DEFAULT ON NULL AS IDENTITY NOT NULL,
    nombre    VARCHAR2(20 CHAR) NOT NULL
);

COMMENT ON COLUMN cargo.nombre IS
    'Describe el cargo ';

ALTER TABLE cargo ADD CONSTRAINT cargo_pk PRIMARY KEY ( id_cargo );

CREATE TABLE clase_licencia (
    id_clase_licencia  NUMBER(2) GENERATED BY DEFAULT ON NULL AS IDENTITY NOT NULL,
    nombre             VARCHAR2(5 CHAR) NOT NULL
);

ALTER TABLE clase_licencia ADD CONSTRAINT clase_licencia_pk PRIMARY KEY ( id_clase_licencia );

CREATE TABLE conductor (
    user_id            NUMBER(11) NOT NULL,
    num_licencia       VARCHAR2(15 CHAR) NOT NULL,
    num_documento      NUMBER(9) NOT NULL,
    id_clase_licencia  NUMBER(2) NOT NULL
);

CREATE UNIQUE INDEX conductor__idx ON
    conductor (
        user_id
    ASC );

ALTER TABLE conductor ADD CONSTRAINT conductor_pk PRIMARY KEY ( user_id );

CREATE TABLE contrato (
    id_contrato         NUMBER(10) GENERATED BY DEFAULT ON NULL AS IDENTITY NOT NULL,
    fecha_creacion      DATE NOT NULL,
    fecha_inicio        DATE NOT NULL,
    fecha_termino       DATE NOT NULL,
    id_empresa          NUMBER(10) NOT NULL,
    empleado_user_id    NUMBER(11) NOT NULL,
    id_estado_contrato  NUMBER(2) NOT NULL
);

COMMENT ON COLUMN contrato.id_contrato IS
    'clave pricipal de la tabla';

ALTER TABLE contrato ADD CONSTRAINT contrato_pk PRIMARY KEY ( id_contrato );

CREATE TABLE costo_proceso (
    id_costo_proceso      NUMBER(10) GENERATED BY DEFAULT ON NULL AS IDENTITY NOT NULL,
    valor_transporte      NUMBER(12) NOT NULL,
    valor_producto_total  NUMBER(12) NOT NULL,
    aduana                NUMBER(12),
    valor_embarque        NUMBER(12),
    valor_total_global    NUMBER(15) NOT NULL,
    id_proceso_venta      NUMBER(10) NOT NULL
);

CREATE UNIQUE INDEX costo_proceso__idx ON
    costo_proceso (
        id_proceso_venta
    ASC );

ALTER TABLE costo_proceso ADD CONSTRAINT costo_proceso_pk PRIMARY KEY ( id_costo_proceso );

CREATE TABLE detalle_pedido (
    id_detalle_pedido  NUMBER(10) GENERATED BY DEFAULT ON NULL AS IDENTITY NOT NULL,
    cantidad           NUMBER(10) NOT NULL,
    id_solicitud       NUMBER(10) NOT NULL,
    id_fruta           NUMBER(3) NOT NULL,
    id_saldo           NUMBER(10)
);

ALTER TABLE detalle_pedido ADD CONSTRAINT detalle_pedido_pk PRIMARY KEY ( id_detalle_pedido );

CREATE TABLE detalle_transporte (
    id_detalle_trasporte  NUMBER(10) GENERATED BY DEFAULT ON NULL AS IDENTITY NOT NULL,
    valor                 NUMBER(12),
    id_proceso_venta      NUMBER(10) NOT NULL
);

CREATE UNIQUE INDEX detalle_transporte__idx ON
    detalle_transporte (
        id_proceso_venta
    ASC );

ALTER TABLE detalle_transporte ADD CONSTRAINT detalle_transporte_pk PRIMARY KEY ( id_detalle_trasporte );

CREATE TABLE empleado (
    user_id             NUMBER(11) NOT NULL,
    fecha_contratacion  DATE NOT NULL,
    fecha_nacimeinto    DATE NOT NULL,
    rut                 NUMBER NOT NULL,
    dv                  NUMBER NOT NULL,
    direccion           VARCHAR2(100 CHAR) NOT NULL,
    id_genero           NUMBER(1) NOT NULL,
    id_cargo            NUMBER(3) NOT NULL
);

alter table EMPLEADO
  add constraint UQ_EMPLEADO_RUT
  unique (rut);

COMMENT ON COLUMN empleado.direccion IS
    'direccion donde vive el empleados';

CREATE UNIQUE INDEX empleado__idx ON
    empleado (
        user_id
    ASC );

ALTER TABLE empleado ADD CONSTRAINT empleado_pk PRIMARY KEY ( user_id );

CREATE TABLE empresa (
    id_empresa         NUMBER(10) GENERATED BY DEFAULT ON NULL AS IDENTITY NOT NULL,
    nombre             VARCHAR2(100 CHAR) NOT NULL,
    telefono_contacto  VARCHAR2(20 CHAR) NOT NULL,
    email_contacto     VARCHAR2(50 CHAR) NOT NULL,
    razon_social       VARCHAR2(150 CHAR) NOT NULL,
    direccion          VARCHAR2(100 CHAR) NOT NULL,
    id_pais            NUMBER(3) NOT NULL,
    user_id            NUMBER(11) NOT NULL
);

COMMENT ON COLUMN empresa.id_empresa IS
    'clave pricipal de la tabla';

COMMENT ON COLUMN empresa.direccion IS
    'donde esta ubicada la empresa';

CREATE UNIQUE INDEX empresa__idx ON
    empresa (
        user_id
    ASC );

ALTER TABLE empresa ADD CONSTRAINT empresa_pk PRIMARY KEY ( id_empresa );

CREATE TABLE estado_contrato (
    id_estado_contrato  NUMBER(2) GENERATED BY DEFAULT ON NULL AS IDENTITY NOT NULL,
    nombre              VARCHAR2(30 CHAR) NOT NULL
);

ALTER TABLE estado_contrato ADD CONSTRAINT estado_contrato_pk PRIMARY KEY ( id_estado_contrato );

CREATE TABLE estado_oferta_subasta (
    id_estado_oferta_subasta  NUMBER(10) GENERATED BY DEFAULT ON NULL AS IDENTITY  NOT NULL,
    nombre                    VARCHAR2(10 CHAR) NOT NULL
);

COMMENT ON COLUMN estado_oferta_subasta.id_estado_oferta_subasta IS
    'Clave principal para las filas de ESTADO_OFERTA_SUBASTA.';

COMMENT ON COLUMN estado_oferta_subasta.nombre IS
    'Descripci�n de la ESTADO_OFERTA_SUBASTA.';

ALTER TABLE estado_oferta_subasta ADD CONSTRAINT estado_oferta_subasta_pk PRIMARY KEY ( id_estado_oferta_subasta );

CREATE TABLE estado_proceso_venta (
    id_estado_proceso_venta NUMBER(2) GENERATED BY DEFAULT ON NULL AS IDENTITY NOT NULL,
    nombre                    VARCHAR2(20 CHAR) NOT NULL
);

ALTER TABLE estado_proceso_venta ADD CONSTRAINT estado_proceso_venta_pk PRIMARY KEY ( id_estado_proceso_venta );

CREATE TABLE estado_solicitud (
    id_estado_solicitud  NUMBER(2)  GENERATED BY DEFAULT ON NULL AS IDENTITY NOT NULL,
    nombre               VARCHAR2(15 CHAR) NOT NULL
);

ALTER TABLE estado_solicitud ADD CONSTRAINT estado_solicitud_pk PRIMARY KEY ( id_estado_solicitud );

CREATE TABLE estado_solicitud_afilacion (
    id_estado_solicitud  NUMBER(2)  GENERATED BY DEFAULT ON NULL AS IDENTITY NOT NULL,
    nombre               VARCHAR2(15 CHAR) NOT NULL
);

ALTER TABLE estado_solicitud_afilacion ADD CONSTRAINT estado_solicitud_afilacion_pk PRIMARY KEY ( id_estado_solicitud );

CREATE TABLE fruta (
    id_fruta  NUMBER(3)  GENERATED BY DEFAULT ON NULL AS IDENTITY NOT NULL,
    nombre    VARCHAR2(30 CHAR) NOT NULL
);

ALTER TABLE fruta ADD CONSTRAINT fruta_pk PRIMARY KEY ( id_fruta );

CREATE TABLE genero (
    id_genero  NUMBER(1)  GENERATED BY DEFAULT ON NULL AS IDENTITY  NOT NULL,
    nombre     VARCHAR2(10 CHAR) NOT NULL
);

ALTER TABLE genero ADD CONSTRAINT genero_pk PRIMARY KEY ( id_genero );

CREATE TABLE oferta_subasta_producto (
    id_ferta_producto         NUMBER(10) GENERATED BY DEFAULT ON NULL AS IDENTITY  NOT NULL,
    valor                     NUMBER(12) NOT NULL,
    fecha_oferta              DATE NOT NULL,
    id_producto               NUMBER(15) NOT NULL,
    id_estado_oferta_subasta  NUMBER(10) NOT NULL,
    id_subasta_producto       NUMBER(10) NOT NULL
);

ALTER TABLE oferta_subasta_producto ADD CONSTRAINT oferta_subasta_producto_pk PRIMARY KEY ( id_ferta_producto );

CREATE TABLE oferta_subasta_transporte (
    id_oferta_subasta_transporte  NUMBER(10) GENERATED BY DEFAULT ON NULL AS IDENTITY  NOT NULL,
    valor                         NUMBER(12) NOT NULL,
    fecha_oferta                  DATE NOT NULL,
    id_subasta_transporte         NUMBER(10) NOT NULL,
    user_id                       NUMBER(11) NOT NULL,
    id_estado_oferta_subasta      NUMBER(10) NOT NULL
);

ALTER TABLE oferta_subasta_transporte ADD CONSTRAINT oferta_subasta_transporte_pk PRIMARY KEY ( id_oferta_subasta_transporte );

CREATE TABLE pais (
    id_pais             NUMBER(3)  GENERATED BY DEFAULT ON NULL AS IDENTITY NOT NULL,
    nombre              VARCHAR2(50 CHAR) NOT NULL,
    two_char_id_pais    CHAR(2 CHAR) NOT NULL,
    three_char_id_pais  CHAR(3 CHAR) NOT NULL
);

COMMENT ON COLUMN pais.id_pais IS
    'clave identificadora de pais';

ALTER TABLE pais ADD CONSTRAINT pais_pk PRIMARY KEY ( id_pais );

CREATE TABLE proceso_venta (
    id_proceso_venta         NUMBER(10)  GENERATED BY DEFAULT ON NULL AS IDENTITY NOT NULL,
    id_estado_proceso_venta  NUMBER(2) NOT NULL,
    id_solicitud             NUMBER(10) NOT NULL
);

CREATE UNIQUE INDEX proceso_venta__idx ON
    proceso_venta (
        id_solicitud
    ASC );

ALTER TABLE proceso_venta ADD CONSTRAINT proceso_venta_pk PRIMARY KEY ( id_proceso_venta );

CREATE TABLE producto (
    id_producto        NUMBER(15) GENERATED BY DEFAULT ON NULL AS IDENTITY  NOT NULL,
    descripcion        VARCHAR2(50) NOT NULL,
    fecha_subida       DATE NOT NULL,
    fecha_vencimiento  DATE NOT NULL,
    id_fruta           NUMBER(3) NOT NULL,
    id_calidad         NUMBER(1) NOT NULL,
    cantidad           NUMBER(10) NOT NULL,
    user_id            NUMBER(11) NOT NULL
);

COMMENT ON COLUMN producto.user_id IS
    'ID_del productor';

ALTER TABLE producto ADD CONSTRAINT productov1_pk PRIMARY KEY ( id_producto );

CREATE TABLE rango_precio_transporte (
    id_rango_transporte  NUMBER  GENERATED BY DEFAULT ON NULL AS IDENTITY NOT NULL,
    valor_inferior       NUMBER(6) NOT NULL,
    valor_superior       NUMBER(6) NOT NULL,
    precio_rango         NUMBER(10) NOT NULL
);

ALTER TABLE rango_precio_transporte ADD CONSTRAINT rango_precio_transporte_pk PRIMARY KEY ( id_rango_transporte );

CREATE TABLE rechazo (
    id_rechazo        NUMBER(10) GENERATED BY DEFAULT ON NULL AS IDENTITY  NOT NULL,
    fecha             DATE NOT NULL,
    comentario        VARCHAR2(120 CHAR) NOT NULL,
    id_proceso_venta  NUMBER(10) NOT NULL,
    id_tipo_rechazo   NUMBER(2) NOT NULL
);

ALTER TABLE rechazo ADD CONSTRAINT rechazo_pk PRIMARY KEY ( id_rechazo );

CREATE TABLE saldo (
    id_saldo     NUMBER(10)  GENERATED BY DEFAULT ON NULL AS IDENTITY NOT NULL,
    id_producto  NUMBER(15) NOT NULL,
    valor_saldo  NUMBER(12,0)
);

CREATE UNIQUE INDEX saldo__idx ON
    saldo (
        id_producto
    ASC );

ALTER TABLE saldo ADD CONSTRAINT saldo_pk PRIMARY KEY ( id_saldo );

CREATE TABLE solicitud (
    id_solicitud         NUMBER(10)  GENERATED BY DEFAULT ON NULL AS IDENTITY  NOT NULL,
    direccion            NVARCHAR2(50) NOT NULL,
    comentario           VARCHAR2(120 CHAR),
    is_nacional          NUMBER(1),
    fecha_creacion       DATE NOT NULL,
    id_pais              NUMBER(3) NOT NULL,
    id_estado_solicitud  NUMBER(2) NOT NULL,
    user_id              NUMBER(11) NOT NULL
);

COMMENT ON COLUMN solicitud.is_nacional IS
    'describre si la solicitud es de pedido interno (1) o exeterno (0)';

ALTER TABLE solicitud ADD CONSTRAINT solicitud_pk PRIMARY KEY ( id_solicitud );

CREATE TABLE solicitud_afilacion (
    id_solicitud         NUMBER(5)  GENERATED BY DEFAULT ON NULL AS IDENTITY NOT NULL,
    nombre_completo      VARCHAR2(100 CHAR) NOT NULL,
    nombre_empresa       VARCHAR2(200 CHAR),
    telefono_contacto    VARCHAR2(18 CHAR),
    mail                 VARCHAR2(50 CHAR) NOT NULL,
    comentario           VARCHAR2(250 CHAR),
    fecha_solicitud      DATE NOT NULL,
    id_estado_solicitud  NUMBER(2) NOT NULL,
    id_tipo_afiliacion   NUMBER(2) NOT NULL,
    user_id              NUMBER(11)
);

ALTER TABLE solicitud_afilacion ADD CONSTRAINT solicitud_afilacion_pk PRIMARY KEY ( id_solicitud );

CREATE TABLE subasta_producto (
    id_subasta_producto  NUMBER(10)  GENERATED BY DEFAULT ON NULL AS IDENTITY  NOT NULL,
    fecha_inicio         DATE NOT NULL,
    fecha_termino        DATE,
    id_proceso_venta     NUMBER(10) NOT NULL,
    id_detalle_pedido    NUMBER(10) NOT NULL
);

CREATE UNIQUE INDEX subasta_producto__idx ON
    subasta_producto (
        id_detalle_pedido
    ASC );

ALTER TABLE subasta_producto ADD CONSTRAINT subasta_producto_pk PRIMARY KEY ( id_subasta_producto );

CREATE TABLE subasta_transporte (
    id_subasta_transporte  NUMBER(10) GENERATED BY DEFAULT ON NULL AS IDENTITY  NOT NULL,
    is_sobrecargo          NUMBER(1) NOT NULL,
    is_refrigerador        NUMBER(1) NOT NULL,
    fecha_inicio           DATE NOT NULL,
    fecha_termino          DATE,
    id_detalle_trasporte   NUMBER(10) NOT NULL
);

CREATE UNIQUE INDEX subasta_transporte__idx ON
    subasta_transporte (
        id_detalle_trasporte
    ASC );

ALTER TABLE subasta_transporte ADD CONSTRAINT subasta_transporte_pk PRIMARY KEY ( id_subasta_transporte );

CREATE TABLE tipo_afiliacion (
    id_tipo_afiliacion  NUMBER(2)  GENERATED BY DEFAULT ON NULL AS IDENTITY NOT NULL,
    nombre              VARCHAR2(25 CHAR) NOT NULL
);

ALTER TABLE tipo_afiliacion ADD CONSTRAINT tipo_afiliacion_pk PRIMARY KEY ( id_tipo_afiliacion );

CREATE TABLE tipo_rechazo (
    id_tipo_rechazo  NUMBER(2) GENERATED BY DEFAULT ON NULL AS IDENTITY  NOT NULL,
    nombre           VARCHAR2(20 CHAR) NOT NULL
);

ALTER TABLE tipo_rechazo ADD CONSTRAINT tipo_rechazo_pk PRIMARY KEY ( id_tipo_rechazo );

CREATE TABLE tipo_vehiculo (
    id_tipo_vehiculo  NUMBER(2) GENERATED BY DEFAULT ON NULL AS IDENTITY  NOT NULL,
    nombre            VARCHAR2(100 CHAR) NOT NULL
);

ALTER TABLE tipo_vehiculo ADD CONSTRAINT tipo_vehiculo_pk PRIMARY KEY ( id_tipo_vehiculo );

CREATE TABLE vehiculo (
    id_vehiculo       NUMBER(5) GENERATED BY DEFAULT ON NULL AS IDENTITY  NOT NULL,
    patente           VARCHAR2(7 CHAR) NOT NULL,
    capacidad_carga   NUMBER(7) NOT NULL,
    sobrecarga        NUMBER(1) NOT NULL,
    id_tipo_vehiculo  NUMBER(2) NOT NULL,
    user_id           NUMBER(11) NOT NULL
);

COMMENT ON COLUMN vehiculo.capacidad_carga IS
    'En kilogramos
';

ALTER TABLE vehiculo ADD CONSTRAINT vehiculo_pk PRIMARY KEY ( id_vehiculo );

ALTER TABLE conductor
    ADD CONSTRAINT conductor_auth_user_fk FOREIGN KEY ( user_id )
        REFERENCES auth_user ( id );

ALTER TABLE conductor
    ADD CONSTRAINT conductor_clase_licencia_fk FOREIGN KEY ( id_clase_licencia )
        REFERENCES clase_licencia ( id_clase_licencia );

ALTER TABLE contrato
    ADD CONSTRAINT contrato_empleado_fk FOREIGN KEY ( empleado_user_id )
        REFERENCES empleado ( user_id );

ALTER TABLE contrato
    ADD CONSTRAINT contrato_empresa_fk FOREIGN KEY ( id_empresa )
        REFERENCES empresa ( id_empresa );

ALTER TABLE contrato
    ADD CONSTRAINT contrato_estado_contrato_fk FOREIGN KEY ( id_estado_contrato )
        REFERENCES estado_contrato ( id_estado_contrato );

ALTER TABLE costo_proceso
    ADD CONSTRAINT costo_proceso_proceso_venta_fk FOREIGN KEY ( id_proceso_venta )
        REFERENCES proceso_venta ( id_proceso_venta );

ALTER TABLE detalle_transporte
    ADD CONSTRAINT det_transp_proc_venta_fk FOREIGN KEY ( id_proceso_venta )
        REFERENCES proceso_venta ( id_proceso_venta );

ALTER TABLE detalle_pedido
    ADD CONSTRAINT detalle_pedido_fruta_fk FOREIGN KEY ( id_fruta )
        REFERENCES fruta ( id_fruta );

ALTER TABLE detalle_pedido
    ADD CONSTRAINT detalle_pedido_solicitud_fk FOREIGN KEY ( id_solicitud )
        REFERENCES solicitud ( id_solicitud );

ALTER TABLE empleado
    ADD CONSTRAINT empleado_auth_user_fk FOREIGN KEY ( user_id )
        REFERENCES auth_user ( id );

ALTER TABLE empleado
    ADD CONSTRAINT empleado_cargo_fk FOREIGN KEY ( id_cargo )
        REFERENCES cargo ( id_cargo );

ALTER TABLE empleado
    ADD CONSTRAINT empleado_genero_fk FOREIGN KEY ( id_genero )
        REFERENCES genero ( id_genero );

ALTER TABLE empresa
    ADD CONSTRAINT empresa_auth_user_fk FOREIGN KEY ( user_id )
        REFERENCES auth_user ( id );

ALTER TABLE empresa
    ADD CONSTRAINT empresa_pais_fk FOREIGN KEY ( id_pais )
        REFERENCES pais ( id_pais );

ALTER TABLE oferta_subasta_transporte
    ADD CONSTRAINT ofe_sub_tra_est_ofe_sub_fk FOREIGN KEY ( id_estado_oferta_subasta )
        REFERENCES estado_oferta_subasta ( id_estado_oferta_subasta );

ALTER TABLE oferta_subasta_transporte
    ADD CONSTRAINT ofer_sub_trans_sub_trans_fk FOREIGN KEY ( id_subasta_transporte )
        REFERENCES subasta_transporte ( id_subasta_transporte );

ALTER TABLE oferta_subasta_producto
    ADD CONSTRAINT ofert_sub_prodc_est_ofert_fk FOREIGN KEY ( id_estado_oferta_subasta )
        REFERENCES estado_oferta_subasta ( id_estado_oferta_subasta );

ALTER TABLE oferta_subasta_producto
    ADD CONSTRAINT ofert_sub_prodc_prodc_fk FOREIGN KEY ( id_producto )
        REFERENCES producto ( id_producto );

ALTER TABLE oferta_subasta_producto
    ADD CONSTRAINT ofert_sub_prodc_sub_prodc_fk FOREIGN KEY ( id_subasta_producto )
        REFERENCES subasta_producto ( id_subasta_producto );

ALTER TABLE oferta_subasta_transporte
    ADD CONSTRAINT ost_c_fk FOREIGN KEY ( user_id )
        REFERENCES conductor ( user_id );

ALTER TABLE proceso_venta
    ADD CONSTRAINT proc_ve_est_proc_ve_fk FOREIGN KEY ( id_estado_proceso_venta )
        REFERENCES estado_proceso_venta ( id_estado_proceso_venta );

ALTER TABLE proceso_venta
    ADD CONSTRAINT proceso_venta_solicitud_fk FOREIGN KEY ( id_solicitud )
        REFERENCES solicitud ( id_solicitud );

ALTER TABLE producto
    ADD CONSTRAINT productov1_auth_user_fk FOREIGN KEY ( user_id )
        REFERENCES auth_user ( id );

ALTER TABLE producto
    ADD CONSTRAINT productov1_calidad_fk FOREIGN KEY ( id_calidad )
        REFERENCES calidad ( id_calidad );

ALTER TABLE producto
    ADD CONSTRAINT productov1_fruta_fk FOREIGN KEY ( id_fruta )
        REFERENCES fruta ( id_fruta );

ALTER TABLE rechazo
    ADD CONSTRAINT rec_pro_ven_fk FOREIGN KEY ( id_proceso_venta )
        REFERENCES proceso_venta ( id_proceso_venta );

ALTER TABLE rechazo
    ADD CONSTRAINT rec_tip_rec_fk FOREIGN KEY ( id_tipo_rechazo )
        REFERENCES tipo_rechazo ( id_tipo_rechazo );

ALTER TABLE detalle_pedido
    ADD CONSTRAINT saldo_fk FOREIGN KEY ( id_saldo )
        REFERENCES saldo ( id_saldo );

ALTER TABLE saldo
    ADD CONSTRAINT saldo_productov1_fk FOREIGN KEY ( id_producto )
        REFERENCES producto ( id_producto );

ALTER TABLE solicitud_afilacion
    ADD CONSTRAINT sol_afi_emp_fk FOREIGN KEY ( user_id )
        REFERENCES empleado ( user_id );

ALTER TABLE solicitud_afilacion
    ADD CONSTRAINT sol_afi_est_sol_afi_fk FOREIGN KEY ( id_estado_solicitud )
        REFERENCES estado_solicitud_afilacion ( id_estado_solicitud );

ALTER TABLE solicitud_afilacion
    ADD CONSTRAINT sol_afi_tip_afi_fk FOREIGN KEY ( id_tipo_afiliacion )
        REFERENCES tipo_afiliacion ( id_tipo_afiliacion );

ALTER TABLE solicitud
    ADD CONSTRAINT solicitud_auth_user_fk FOREIGN KEY ( user_id )
        REFERENCES auth_user ( id );

ALTER TABLE solicitud
    ADD CONSTRAINT solicitud_estado_solicitud_fk FOREIGN KEY ( id_estado_solicitud )
        REFERENCES estado_solicitud ( id_estado_solicitud );

ALTER TABLE solicitud
    ADD CONSTRAINT solicitud_pais_fk FOREIGN KEY ( id_pais )
        REFERENCES pais ( id_pais );

ALTER TABLE subasta_producto
    ADD CONSTRAINT sub_prod_detalle_pedido_fk FOREIGN KEY ( id_detalle_pedido )
        REFERENCES detalle_pedido ( id_detalle_pedido );

ALTER TABLE subasta_producto
    ADD CONSTRAINT sub_prod_proc_venta_fk FOREIGN KEY ( id_proceso_venta )
        REFERENCES proceso_venta ( id_proceso_venta );

ALTER TABLE subasta_transporte
    ADD CONSTRAINT sub_tran__det_tra_fk FOREIGN KEY ( id_detalle_trasporte )
        REFERENCES detalle_transporte ( id_detalle_trasporte );

ALTER TABLE vehiculo
    ADD CONSTRAINT vehiculo_conductor_fk FOREIGN KEY ( user_id )
        REFERENCES conductor ( user_id );

ALTER TABLE vehiculo
    ADD CONSTRAINT vehiculo_tipo_vehiculo_fk FOREIGN KEY ( id_tipo_vehiculo )
        REFERENCES tipo_vehiculo ( id_tipo_vehiculo );

--renombramos una tabla
RENAME ESTADO_SOLICITUD_AFILACION to ESTADO_SOLICITUD_AFILIACION;
RENAME SOLICITUD_AFILACION to SOLICITUD_AFILIACION;
COMMIT;
